- 親
  - [x] useStateでtextを持つ初期値{text:"",disable:true}
  - [x] apiの代わりにbuttonで値を更新する{text:"取得した値", disable:false}
    apiから取得した値を他の子コンポーネントを渡すため、apiを叩く処理を子供に渡すことが難しい
  - [x] 子にuseStateの値を渡す
- 子
  - [x] 親から貰ったtextを表示する
  - [x] disableであればdisableにする
  - [x] 親のbuttonを押したら新しいテキストが表示され、ableになる
  - textAreaを編集した際、
    - 半角英数なら文字数チェックし、余剰分をトリムしてから親に渡す
    - IMEなら確定後に、変換チェックと余剰分をトリムして親に渡す
      変換中は余剰分をトリムせずに親に渡す
  - 送信で表示している文字を送る

---
何をしたかった？
「useStateを親子で連結して持つと、子供のuseStateは初期値で固定されてしまう。」
を書きたかった。

[Q]親子で連結しちゃったのはなぜ？
textAreaの初期値を遅延処理で変更し、子コンポーネントに渡した
子コンポーネントは独自のuseStateを持っていた。

[Q]子コンポーネントが独自のuseStateを持つのはなぜ？
子コンポーネントは親から渡された値を表示するだけでなく、
子コンポーネント内での状態管理が必要だったため。

[Q]子コンポーネント内での状態管理が必要だったのはなぜ？
子コンポーネントだけで知っておけば良い処理があったため。
→ IME中の処理

結論として、IME中の処理も親に管理させる必要が出てきた。